{"version":3,"sources":["Components/Chatbubble/Chatbubble.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ChatBubble","who","props","Fragment","className","style","display","fontWeight","color","this","text","Component","Test","state","messages","input","callFunc","document","getElementById","appendMessage","value","console","log","setState","concat","appendResponse","a","index","lastIndexOf","message","axios","get","params","res","data","bind","id","onClick","map","type","placeholder","App","exact","path","component","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"mUA0BeA,E,4MArBXC,IAAM,WACF,MAAsB,cAAnB,EAAKC,MAAMD,IACH,SAGA,S,4CAIf,WACI,OACI,eAAC,IAAME,SAAP,WACI,qBAAKC,UAAU,aAAf,SACI,oBAAGA,UAAU,OAAb,cAAqB,sBAAMC,MAAO,CAACC,QAAS,eAAgBC,WAAY,OAAQC,MAAO,gBAAlE,SAAoFC,KAAKR,QAA9G,KAA8HQ,KAAKP,MAAMQ,UAE7I,8B,GAjBSC,a,yBCiFVC,E,kDAtEX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IANVW,MAAQ,CACJC,SAAU,GACVC,MAAO,IAGQ,EAcnBC,SAAW,WACPC,SAASC,eAAe,UAAUb,MAAMC,QAAU,OAClDW,SAASC,eAAe,WAAWb,MAAMC,QAAU,gBAhBpC,EAmBnBa,cAAgB,WACsC,KAA9CF,SAASC,eAAe,YAAYE,MACpCC,QAAQC,IAAI,oBAEZ,EAAKC,SAAS,CAAET,SAAU,EAAKD,MAAMC,SAASU,OAAOP,SAASC,eAAe,YAAYE,OAAQL,MAAO,EAAKF,MAAME,MAAMS,OAAO,eAAe,WAC3I,EAAKC,oBAETR,SAASC,eAAe,YAAYE,MAAQ,IA1BjC,EA+BnBK,eA/BmB,sBA+BF,gCAAAC,EAAA,6DACTC,EAAQ,EAAKd,MAAME,MAAMa,YAAY,aACrCC,EAAU,EAAKhB,MAAMC,SAASa,GAFrB,SAIKG,IAAMC,IAAI,+BAAgC,CAAEC,OAAS,CAACH,aAJ3D,OAIPI,EAJO,OAMb,EAAKV,SAAS,CAAET,SAAU,EAAKD,MAAMC,SAASU,OAAOS,EAAIC,MAAOnB,MAAO,EAAKF,MAAME,MAAMS,OAAO,cANlF,2CA7Bb,EAAKX,MAAQ,CACTC,SAAU,GACVC,MAAO,IAGX,EAAKI,cAAgB,EAAKA,cAAcgB,KAAnB,gBAPN,E,0CA0CnB,WACgB1B,KAAKI,MAAME,MAAvB,IACIc,EAAUpB,KAAKI,MAAMC,SACzB,OACI,eAAC,IAAMX,SAAP,WACI,wBAAQiC,GAAG,SAAShC,UAAU,cAAciC,QAAS5B,KAAKO,SAA1D,gCACA,sBAAKoB,GAAG,UAAR,UACI,qBAAIhC,UAAU,UAAd,uBAAkC,sBAAMC,MAAO,CAACG,MAAO,UAArB,0BAAlC,2BACA,sBAAKJ,UAAU,cAAcgC,GAAG,cAAhC,UACI,qBAAKhC,UAAU,qBAAqBgC,GAAG,SAAvC,SAEQ3B,KAAKI,MAAME,MAAMuB,KAAI,SAASvB,EAAOY,GACjC,OAAO,cAAC,EAAD,CAAYjB,KAAMmB,EAAQF,GAAQ1B,IAAKc,SAK1D,sBAAKX,UAAU,eAAf,UACI,0BAAUmC,KAAK,OAAOH,GAAG,WAAWI,YAAY,mBAAmBpC,UAAU,cAC7E,wBAAQgC,GAAG,aAAahC,UAAU,kBAAkBiC,QAAS5B,KAAKU,cAAlE,+B,GArETR,a,eCUJ8B,MAZf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,IAAIC,UAAWC,WCG5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAvC,SAASC,eAAe,SAM1B4B,M","file":"js/main.cf969ddc.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Chatbubble.css';\n\nclass ChatBubble extends Component {\n    \n    who = ()=>{\n        if(this.props.who === \"userinput\"){\n            return \"User: \"\n        }\n        else{\n            return \"Bot: \"\n        }\n    }\n\n    render(){\n        return(\n            <React.Fragment>  \n                <div className=\"chatbubble\">\n                    <p className=\"para\"> <span style={{display: \"inline-block\", fontWeight: \"bold\", color: \"lightskyblue\"}}>{this.who()}</span>  {this.props.text}</p>\n                </div>\n                <br/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ChatBubble;","import React, { Component } from 'react';\nimport ChatBubble from '../Chatbubble/Chatbubble';\nimport './Home.css';\nimport axios from 'axios';\n\n\nclass Test extends Component {\n    \n\n    state = {\n        messages: [],\n        input: [],\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: [],\n            input: []\n        }\n        \n        this.appendMessage = this.appendMessage.bind(this);\n        \n    }\n\n\n    \n\n    callFunc = () => {\n        document.getElementById(\"button\").style.display = \"none\";\n        document.getElementById(\"chatbot\").style.display = \"inline-block\";\n    }\n\n    appendMessage = () => {\n        if (document.getElementById(\"inputval\").value === \"\")\n            console.log(\"No value entered\")\n        else\n            this.setState({ messages: this.state.messages.concat(document.getElementById(\"inputval\").value), input: this.state.input.concat(\"userinput\")}, () => {\n                this.appendResponse();\n            });\n            document.getElementById(\"inputval\").value = \"\";\n            \n        \n    }    \n\n    appendResponse = async () => {        \n        var index = this.state.input.lastIndexOf(\"userinput\");\n        var message = this.state.messages[index]\n\n        const res = await axios.get('http://localhost:3000/output', { params:  {message}  });\n\n        this.setState({ messages: this.state.messages.concat(res.data), input: this.state.input.concat(\"botinput\")});\n        \n    }\n\n    \n    render() {\n        var input = this.state.input;\n        var message = this.state.messages;\n        return (\n            <React.Fragment>\n                <button id=\"button\" className=\"buttonStyle\" onClick={this.callFunc}>Activate Assistant</button>\n                <div id=\"chatbot\">\n                    <h2 className=\"heading\">Say hi to <span style={{color: \"orange\"}}>AlphaCharlie</span>, a Virtual Assistant</h2>\n                    <div className=\"chatSegment\" id=\"chatSegment\">\n                        <div className=\"displayChatSegment\" id=\"parent\">\n                            {   \n                                this.state.input.map(function(input, index){\n                                    return(<ChatBubble text={message[index]} who={input} />)    \n                                })\n                            }\n                        </div>\n                        \n                        <div className=\"inputSegment\">\n                            <textarea type=\"text\" id=\"inputval\" placeholder=\"Enter Text Here!\" className=\"inputText\"></textarea>\n                            <button id=\"sendButton\" className=\"sendButtonStyle\" onClick={this.appendMessage}>^</button>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Test;","import './App.css';\nimport Home from '../src/Components/Home/Home';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}